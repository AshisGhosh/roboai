version: '3.8'
services:
  robosuite-simulation:
    build:
      context: ./robosim
      dockerfile: Dockerfile
    volumes:
      - ./robosim:/app
      - /run/user/1000/gdm/Xauthority:/root/.Xauthority:rw 
    environment:
      - DISPLAY=${DISPLAY}
      - MUJOCO_GL=osmesa
      - XAUTHORITY=/root/.Xauthority  
    # entrypoint: conda run -n robot_env 
    # command: python -m robosuite.demos.demo_random_action
    command: python -u -m robosim.quick_start
    # command: /bin/bash -c "while true; do sleep 30; done"
    network_mode: host
    profiles: ["dev"]

  robomimic-simulation:
    build:
      context: ./robomimic_sim
      dockerfile: Dockerfile
    volumes:
      - ./robomimic_sim:/app
      - /run/user/1000/gdm/Xauthority:/root/.Xauthority:rw
    environment:
      - DISPLAY=${DISPLAY}
      - MUJOCO_GL=osmesa
      - XAUTHORITY=/root/.Xauthority
    working_dir: /app
    command: python -u robomimic_sim/run_policy.py
    # command: /bin/bash -c "while true; do sleep 30; done"
    network_mode: host
  robomimic-server:
    build:
      context: ./robomimic_sim
      dockerfile: Dockerfile
    volumes:
      - ./robomimic_sim:/app
      - /run/user/1000/gdm/Xauthority:/root/.Xauthority:rw
    environment:
      - DISPLAY=${DISPLAY}
      - MUJOCO_GL=osmesa
      - XAUTHORITY=/root/.Xauthority
    working_dir: /app
    command: poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000
    # command: /bin/bash -c "while true; do sleep 30; done"
    network_mode: host

  robosim:
    image: robo_ai-robomimic-simulation
    build:
      context: .
      dockerfile: robosim/Dockerfile
    volumes:
      - ./robosim:/app
      - /run/user/1000/gdm/Xauthority:/root/.Xauthority:rw
      - ./shared:/app/shared
      - ~/.cache/huggingface:/root/.cache/huggingface
    environment:
      - DISPLAY=${DISPLAY}
      - MUJOCO_GL=osmesa
      - XAUTHORITY=/root/.Xauthority
    command: python -u -m robosim.quick_start
    network_mode: host

  robosim-server:
    image: robo_ai-robosuite-simulation
    build:
      context: .
      dockerfile: robosim/Dockerfile
    volumes:
      - ./robosim:/app
      - /run/user/1000/gdm/Xauthority:/root/.Xauthority:rw
      - ./shared:/app/shared
    environment:
      - DISPLAY=${DISPLAY}
      - MUJOCO_GL=osmesa
      - XAUTHORITY=/root/.Xauthority
    command: poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    network_mode: host

  autogen-roboai:
    build:
      context: ./autogen_roboai
      dockerfile: Dockerfile
    volumes:
      - ./autogen_roboai:/app
      - /run/user/1000/gdm/Xauthority:/root/.Xauthority:rw
    environment:
      - DISPLAY=${DISPLAY}
      - MUJOCO_GL=osmesa
      - XAUTHORITY=/root/.Xauthority
    command: python -u -m autogen_roboai.test
    # command:  /bin/bash -c "while true; do sleep 30; done"
    network_mode: host

  crewai-roboai:
    build:
      context: ./crewai_roboai
      dockerfile: Dockerfile
    volumes:
      - ./crewai_roboai:/app
      - /run/user/1000/gdm/Xauthority:/root/.Xauthority:rw
    environment:
      - DISPLAY=${DISPLAY}
      - MUJOCO_GL=osmesa
      - XAUTHORITY=/root/.Xauthority
    command: python -u -m crewai_roboai.test
    # command:  /bin/bash -c "while true; do sleep 30; done"
    network_mode: host
  
  langroid-roboai:
    build:
      context: ./langroid_roboai
      dockerfile: Dockerfile
    volumes:
      - ./langroid_roboai:/app
      - /run/user/1000/gdm/Xauthority:/root/.Xauthority:rw
    environment:
      - DISPLAY=${DISPLAY}
      - MUJOCO_GL=osmesa
      - XAUTHORITY=/root/.Xauthority
    command: python -u -m langroid_roboai.test
    # command:  /bin/bash -c "while true; do sleep 30; done"
    network_mode: host

  roboai:
    build:
      context: .
      dockerfile: ./roboai/Dockerfile
    volumes:
      - ./roboai:/app
      - /run/user/1000/gdm/Xauthority:/root/.Xauthority:rw
      - ./shared:/app/shared
    environment:
      - DISPLAY=${DISPLAY}
      - MUJOCO_GL=osmesa
      - XAUTHORITY=/root/.Xauthority
    command: /bin/bash -c "python -u -m roboai.parse_images"
    # command:  /bin/bash -c "while true; do sleep 30; done"
    network_mode: host
  
  grasp-server:
    build:
      context: ./grasp_server
      dockerfile: Dockerfile
    volumes:
      - ./grasp_server:/app
      - /run/user/1000/gdm/Xauthority:/root/.Xauthority:rw
      - ./shared:/app/shared
    environment:
      - DISPLAY=${DISPLAY}
      - XAUTHORITY=/root/.Xauthority
      # - QT_QPA_PLATFORM=xcb
      # - QT_DEBUG_PLUGINS=1
    command: poetry run uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload
    # command: python -u -m grasp_server.grasp
    # command:  /bin/bash -c "while true; do sleep 30; done"
    network_mode: host
  
  robotic-grasping-server:
    build:
      context: ./robotic_grasping_server
      dockerfile: Dockerfile
    volumes:
      - ./robotic_grasping_server:/app
      - /run/user/1000/gdm/Xauthority:/root/.Xauthority:rw
      - ./shared:/app/shared
    environment:
      - DISPLAY=${DISPLAY}
      - XAUTHORITY=/root/.Xauthority
    command: poetry run uvicorn app.main:app --host 0.0.0.0 --port 8003 --reload
    # command: poetry run python -u -m robotic_grasping_server.robotic_grasping
    # command:  /bin/bash -c "while true; do sleep 30; done"
    network_mode: host
  
  ollama-server:
    image: ollama/ollama
    volumes:
      - ~/.cache/ollama:/root/.ollama
    ports:
      - 11434:11434

  awq-model-server:
    build:
      context: .
      dockerfile: ./awq_model_server/Dockerfile
    volumes:
      - ./awq_model_server:/app
      - /run/user/1000/gdm/Xauthority:/root/.Xauthority:rw
      - ./shared:/app/shared
    environment:
      - DISPLAY=${DISPLAY}
      - XAUTHORITY=/root/.Xauthority
    command:  /bin/bash -c "while true; do sleep 30; done"
    network_mode: host

  model-server:
    build:
      context: .
      dockerfile: ./model_server/Dockerfile
    volumes:
      - ./model_server:/app
      - /run/user/1000/gdm/Xauthority:/root/.Xauthority:rw
      - ./shared:/app/shared
      - ~/.cache/huggingface:/root/.cache/huggingface
    environment:
      - DISPLAY=${DISPLAY}
      - XAUTHORITY=/root/.Xauthority
    # command:  /bin/bash -c "while true; do sleep 30; done"
    command: /bin/bash -c "python -u -m model_server.hf_moondream2"
    # command: poetry run uvicorn app.main:app --host 0.0.0.0 --port 8002 --reload
    network_mode: host

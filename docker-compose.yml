services:
  isaac-sim:
      build:
        context: .
        dockerfile: ./isaac_sim/Dockerfile
      volumes:
        - /tmp/.X11-unix:/tmp/.X11-unix
        - /run/user/1000/gdm/Xauthority:/root/.Xauthority:rw
        - ~/docker/isaac-sim/cache/kit:/isaac-sim/kit/cache:rw
        - ~/docker/isaac-sim/cache/ov:/root/.cache/ov:rw
        - ~/docker/isaac-sim/cache/pip:/root/.cache/pip:rw
        - ~/docker/isaac-sim/cache/glcache:/root/.cache/nvidia/GLCache:rw
        - ~/docker/isaac-sim/cache/computecache:/root/.nv/ComputeCache:rw
        - ~/docker/isaac-sim/logs:/root/.nvidia-omniverse/logs:rw
        - ~/docker/isaac-sim/data:/root/.local/share/ov/data:rw
        - ~/docker/isaac-sim/documents:/root/Documents:rw
        - ./isaac_sim/isaac_sim:/isaac-sim/roboai/
        - ./shared:/isaac-sim/roboai/shared
        - ./isaac_sim/humble_ws/src:/isaac-sim/humble_ws/src
        - ./isaac_sim/bin:/isaac-sim/roboai/bin
      environment:
        - DISPLAY=${DISPLAY}
        - XAUTHORITY=/root/.Xauthority
        - ACCEPT_EULA=Y
        - PRIVACY_CONSENT=Y
        - ROS_DOMAIN_ID=${ROS_DOMAIN_ID:-0}
      entrypoint: /bin/bash -c "while true; do sleep 30; done"
      network_mode: host
      deploy:
        resources:
          reservations:
            devices:
              - driver: nvidia
                count: 1
                capabilities: [gpu]
  franka:
    image: franka_isaac_moveit_tutorial
    build:
      context: ./franka_moveit
      dockerfile: Dockerfile
    stdin_open: true
    tty: true
    network_mode: host
    ipc: host
    privileged: true
    environment:
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID:-0}
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${XAUTHORITY:-$HOME/.Xauthority}:/root/.Xauthority
      - ./franka_moveit/config:/root/ws_moveit/src/moveit2_tutorials/doc/how_to_guides/isaac_panda/config
    command: ros2 launch moveit2_tutorials isaac_demo.launch.py
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    
  grasp-server:
    build:
      context: ./grasping/grasp_server
      dockerfile: Dockerfile
    volumes:
      - ./grasping/grasp_server:/app
      - /run/user/1000/gdm/Xauthority:/root/.Xauthority:rw
      - ./shared:/app/shared
    environment:
      - DISPLAY=${DISPLAY}
      - XAUTHORITY=/root/.Xauthority
    command: poetry run uvicorn app.main:app --host 0.0.0.0 --port 8005 --reload
    network_mode: host
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
  
  ollama-server:
    image: ollama/ollama:latest
    volumes:
      - ~/.cache/ollama:/root/.ollama
    ports:
      - 11434:11434

  minedojo:
    build: 
      context: ./minedojo_sim
      dockerfile: Dockerfile
    volumes:
      - /run/user/1000/gdm/Xauthority:/root/.Xauthority:rw
    environment:
      - DISPLAY=${DISPLAY}
      - XAUTHORITY=/root/.Xauthority
    ports:
      - 8000:8000
    command: /bin/bash -c "while true; do sleep 30; done"
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
  roboai:
    build:
      context: .
      dockerfile: ./roboai/Dockerfile
    volumes:
      - ./roboai:/app
      - /run/user/1000/gdm/Xauthority:/root/.Xauthority:rw
      - ./shared:/app/shared
      - ~/.burr:/root/.burr
    environment:
      - DISPLAY=${DISPLAY}
      - MUJOCO_GL=osmesa
      - XAUTHORITY=/root/.Xauthority
    # command: python -u -m roboai.roboai
    command: bash -c "python -m streamlit run roboai/streamlit_app.py --server.headless true --server.port=8501 --server.address=0.0.0.0 & burr --no-open"
    # command: /bin/bash -c "while true; do sleep 30; done"
    network_mode: host
  
  roboai-demo:
    extends: roboai
    command: python -u -m roboai.roboai_demo

    